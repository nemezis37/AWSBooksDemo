on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region to deploy to'
        required: true
        default: 'us-east-1'

name: Deploy

jobs:
  deploy_api:
    name: Deploy API
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region }}

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "::set-output name=environment::$ENVIRONMENT"
    - name: Deploy with CloudFormation
      id: amplify-stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ${{ steps.env-name.outputs.environment }}
        template: stack.yaml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
           KeyName=ec2ssh,
           InstanceType=t2.micro,
           AWSDynamoAccessKeyId=${{ secrets.AWS_DYNAMO_ACCESS_KEY_ID }},
           AWSDynamoSecretKey=${{ secrets.AWS_DYNAMO_SECRET_ACCESS_KEY }}

  deploy_lamda:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '3.1.x'
    - name: Install dependencies
      run: |
        cd Lambda
        dotnet restore
    - name: Build
      run: |
        cd Lambda
        dotnet build --configuration Release --no-restore
    - name: zip
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./bundle.zip ./Lambda/bin/Release/netcoreapp3.1
    - name: default deploy
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ github.event.inputs.region }}
        function_name: fdghsfdhfgh
        zip_file: bundle.zip
     